# Allows ability to externalize the Windows Credential info
# in order to facilitate pbuild and other environment updates...
if [ -f ~/.wincred ]; then
	. ~/.wincred
fi

PS1='\u@\h:\w> '

OSARCH=""

if [ ! -x ~/bin/arch ]; then
	echo "No arch script found...";
else
	OSARCH=`~/bin/arch`
fi

case "$TERM" in
	xterm* )
	# This line will put the user, hostname and cwd in the title of an xterm.
	PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"'
	;;
esac

# It turns out that if you echo during an SCP, the SCP will fail.
# The good news is the TERM is set to "dumb" when SCP logs in.  So 
# we can trap that here.
if [ -n "$TERM" -a "$TERM" != "dumb" ]; then
	if [ -z "$WINDOWS_DOMAIN" -o -z "$WINDOWS_USERNAME" ]; then
		echo "Error:  Please set the WINDOWS_DOMAIN and/or WINDOWS_USERNAME variables"
		echo "in your ~/.wincred file before attempting to configure TFS."
		echo "Like this..."
		echo "export WINDOWS_DOMAIN=MYDOMAIN"
		echo "export WINDOWS_USERNAME=MYUSERNAME"
	fi
fi

case "$OSARCH" in
	SLES* )	
		export PATH=.:~/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/bin:/usr/X11R6/bin:/bin:/usr/games:/opt/gnome/bin:/opt/kde3/bin:/usr/lib/mit/bin:/usr/lib/mit/sbin:/opt/teamprise:/opt/tfprox/bin
		export LD_LIBRARY_PATH=$NW_HOME/lib
		;;

	HpuxB.11* )
		export PATH=.:~/bin:/opt/langtools/bin:/usr/local/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/bin:/usr/X11R6/bin:/bin:/usr/games:/opt/gnome/bin:/opt/kde3/bin:/usr/lib/mit/bin:/usr/lib/mit/sbin:/opt/java1.5/bin:/opt/teamprise:/opt/tfprox/bin:/opt/aCC/bin:/usr/bin/X11
		if tty > /dev/null; then
			stty intr 
			stty erase 
			stty kill 
		fi
		export SHLIB_PATH=$NW_HOME/lib
	;;

	Aix71*|Aix61*|Aix53* )
		export PATH=.:~/bin:/opt/freeware/bin:/usr/vacpp/bin:/usr/bin:/etc:/usr/sbin:/usr/ucb:/usr/bin/X11:/sbin:/opt/tfprox/bin:/opt/teamprise:/usr/java5/bin
		export LD_LIBRARY_PATH=$NW_HOME/lib
        export MANPATH=/usr/man:/usr/vacpp/man/EN_US:$MANPATH

	;;


	RHEL6* )
		export PATH=.:~/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/bin:/usr/X11R6/bin:/bin:/opt/gnome/bin:/opt/kde3/bin:/usr/lib/mit/bin:/usr/lib/mit/sbin:/opt/teamprise:/opt/tfprox/bin
		export LD_LIBRARY_PATH=$NW_HOME/lib
	;;

	RHEL5*|RHEL4* )
		export PATH=.:~/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/bin:/usr/X11R6/bin:/bin:/opt/gnome/bin:/opt/kde3/bin:/usr/lib/mit/bin:/usr/lib/mit/sbin:/opt/teamprise:/opt/tfprox/bin
		export LD_LIBRARY_PATH=$NW_HOME/lib
	;;

	Sol10*|Sol9* )
		export PATH=.:~/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/bin:/usr/X11R6/bin:/bin:/usr/games:/opt/teamprise:/opt/tfprox/bin:/opt/sfw/bin:/usr/sfw/bin:/opt/SUNWspro/bin
		# Fix man path to include optional compiler man pages
		export MANPATH=/usr/man:/opt/SUNWspro/man:$MANPATH
		export LD_LIBRARY_PATH=$NW_HOME/lib
	;;

        Ubuntu12*|Ubuntu11* )
                export PATH=.:~/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/bin:/usr/X11R6/bin:/bin:/opt/gnome/bin:/opt/kde3/bin:/usr/lib/mit/bin:/usr/lib/mit/sbin:/opt/teamprise:/opt/tfprox/bin
                export LD_LIBRARY_PATH=$NW_HOME/lib
        ;;

	*) 
		echo "Unknown Architecture, no path set."
		;;
esac


export EXINIT='set nu ai ic nowrap ts=4 sw=4'

alias c=clear
alias h=history

alias rsh='ssh'
alias pd='pushd'
alias po='popd'
alias bashrc='. ~/.bashrc'

# TF related aliases
alias co='tf checkout'
alias unco='tf undo'
alias ci='tf checkin'
alias lsco='tf status -recursive .'
alias lscoa='tf status'


# Organized way for devs to override/add to default templates
# while still allowing updates to the core files.
#
if [ -f ~/.bashrc_local ]; then
	. ~/.bashrc_local
fi
	

tfprox()
{
	sudo /opt/tfprox/bin/tfprox
}

bindiff()
{
	diff $1 ~/bin/$1
}


makelog()
{
	make $@ 2>&1 | tee make.log
}

psg()
{
	ps -aef | grep -i $1 | grep -v grep
}

psk()
{
	ps -aef | grep -i $1 | grep -v grep | awk '{print $2}' | xargs -r kill -9
}

tfdiff()
{
	tf print $1 | diff $1 -
}

vico() 
{
	co $1;
	vi $1;
	return 0;
}


makeenv()
{
	pd ~
	tar cvf ~/env.tar .bashrc .bash_profile .bash_functions bin
	po
}

. ~/.bash_functions
